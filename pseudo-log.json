{
  "logs": [
    {
      "time": "2025-09-21 04:08:19",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395299578",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "황차명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "26"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "test1089@daum.net"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "황차명",
        "25": "26",
        "contact@example.com": "test1089@daum.net"
      },
      "reverse_map": {
        "황차명": "이영희",
        "26": "25",
        "test1089@daum.net": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:08:33",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395312957",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "서차명"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0017-0049"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "고객": "서차명",
        "010-9876-5432": "010-0017-0049"
      },
      "reverse_map": {
        "서차명": "고객",
        "010-0017-0049": "010-9876-5432"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:08:57",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395337201",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동이",
            "start": 13,
            "end": 17,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "오샘플"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0011-0045"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "홍길동이": "오샘플",
        "010-1234-5678": "010-0011-0045"
      },
      "reverse_map": {
        "오샘플": "홍길동이",
        "010-0011-0045": "010-1234-5678"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:09:07",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395347687",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "오차명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "41"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "work1051@naver.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "오차명",
        "25": "41",
        "contact@example.com": "work1051@naver.com"
      },
      "reverse_map": {
        "오차명": "이영희",
        "41": "25",
        "work1051@naver.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:10:39",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "pseudo_1758395439075_b1z04xjwg",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "한가명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "52"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "hello1081@naver.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "한가명",
        "25": "52",
        "contact@example.com": "hello1081@naver.com"
      },
      "reverse_map": {
        "한가명": "이영희",
        "52": "25",
        "hello1081@naver.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:14:53",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395693011",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "황차명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "39"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "hello1090@kakao.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "황차명",
        "25": "39",
        "contact@example.com": "hello1090@kakao.com"
      },
      "reverse_map": {
        "황차명": "이영희",
        "39": "25",
        "hello1090@kakao.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:15:04",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395704070",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "강샘플"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0017-0039"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "고객": "강샘플",
        "010-9876-5432": "010-0017-0039"
      },
      "reverse_map": {
        "강샘플": "고객",
        "010-0017-0039": "010-9876-5432"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:15:13",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395713860",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동이",
            "start": 13,
            "end": 17,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "윤샘플"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0014-0013"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "홍길동이": "윤샘플",
        "010-1234-5678": "010-0014-0013"
      },
      "reverse_map": {
        "윤샘플": "홍길동이",
        "010-0014-0013": "010-1234-5678"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:15:24",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395724816",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "이테스트"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0018-0052"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "고객": "이테스트",
        "010-9876-5432": "010-0018-0052"
      },
      "reverse_map": {
        "이테스트": "고객",
        "010-0018-0052": "010-9876-5432"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:15:32",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758395732474",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "전차명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "49"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "user1083@naver.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "전차명",
        "25": "49",
        "contact@example.com": "user1083@naver.com"
      },
      "reverse_map": {
        "전차명": "이영희",
        "49": "25",
        "user1083@naver.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:16:03",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "pseudo_1758395762949_tq32q1wlt",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "정샘플"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "41"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "test1091@daum.net"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "정샘플",
        "25": "41",
        "contact@example.com": "test1091@daum.net"
      },
      "reverse_map": {
        "정샘플": "이영희",
        "41": "25",
        "test1091@daum.net": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:16:40",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "popup_test_1758395800728",
        "prompt": "테스트입니다. 제 이름은 김철수이고 연락처는 010-1234-5678입니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "테스트",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "정가명"
          },
          {
            "type": "이름",
            "value": "김철수이",
            "start": 14,
            "end": 18,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "류가명"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 25,
            "end": 38,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0017-0045"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "테스트": "정가명",
        "김철수이": "류가명",
        "010-1234-5678": "010-0017-0045"
      },
      "reverse_map": {
        "정가명": "테스트",
        "류가명": "김철수이",
        "010-0017-0045": "010-1234-5678"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:23:39",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "pseudo_1758396218985_rrtuz58m2",
        "prompt": "pii 항목 전화번호, 주소, 이름 등을 탐지하는 AI 모델(NER)이 필요해. 한국어 지원이 가능한 모델로 실시간 처리가 가능한 속도가 가능한 모델을 찾아서 나열해줘"
      },
      "detection": {
        "contains_pii": false,
        "items": [],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {},
      "reverse_map": {},
      "performance": {
        "items_detected": 0
      }
    },
    {
      "time": "2025-09-21 04:24:49",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "pseudo_1758396288981_el91a2aa5",
        "prompt": "flask 환경이야\n# pseudonymization/model.py - 개선된 NER 모델\r\nimport os\r\nimport torch\r\nfrom typing import List, Dict, Any, Optional\r\nfrom concurrent.futures import ThreadPoolExecutor\r\n\r\n# NER 모델 관련 import\r\ntry:\r\n    from transformers import AutoTokenizer, AutoModelForTokenClassification, pipeline\r\n    NER_AVAILABLE = True\r\nexcept ImportError:\r\n    NER_AVAILABLE = False\r\n    print(\"⚠️ Transformers 라이브러리가 없습니다. pip install transformers torch를 실행하세요.\")\r\n\r\n# 실제로 존재하고 검증된 한국어 NER 모델들 (성능 순서)\r\nNER_MODELS = [\r\n    \"klue/bert-base-ner\",                                # 1순위: KLUE 공식 NER 모델\r\n    \"monologg/koelectra-base-v3-naver-ner\",             # 2순위: 네이버 데이터 기반 (현재 사용 중)\r\n    \"sangha/kobert-ner\",                                 # 3순위: KoBERT 기반 NER\r\n    \"Leo97/KoELECTRA-small-v3-modu-ner\"                 # 4순위: 모두의 말뭉치 기반\r\n]\r\n\r\nclass ImprovedNERModel:\r\n    \"\"\"개선된 NER 모델 클래스\"\"\"\r\n    \r\n    def __init__(self):\r\n        self.model = None\r\n        self.tokenizer = None\r\n        self.pipeline = None\r\n        self.device = self._get_device()\r\n        self.loaded = False\r\n        self.model_name = None\r\n    \r\n    def _get_device(self):\r\n        \"\"\"최적의 디바이스 선택\"\"\"\r\n        if torch.cuda.is_available():\r\n            return 0  # GPU\r\n        elif hasattr(torch.backends, 'mps') and torch.backends.mps.is_available():\r\n            return \"mps\"  # Apple Silicon\r\n        else:\r\n            return -1  # CPU\r\n    \r\n    def load_model(self) -> bool:\r\n        \"\"\"여러 모델을 시도하여 가장 좋은 모델 로드\"\"\"\r\n        if not NER_AVAILABLE:\r\n            print(\"❌ NER 모델을 로드할 수 없습니다 - transformers 라이브러리가 필요합니다\")\r\n            return False\r\n        \r\n        for model_name in NER_MODELS:\r\n            try:\r\n                print(f\"🔄 NER 모델 로딩 시도: {model_name}\")\r\n                \r\n                # 토크나이저와 모델 로드\r\n                self.tokenizer = AutoTokenizer.from_pretrained(model_name)\r\n                self.model = AutoModelForTokenClassification.from_pretrained(model_name)\r\n                \r\n                # 파이프라인 생성\r\n                self.pipeline = pipeline(\r\n                    \"ner\", \r\n                    model=self.model, \r\n                    tokenizer=self.tokenizer,\r\n                    aggregation_strategy=\"simple\",\r\n                    device=self.device\r\n                )\r\n                \r\n                # 간단한 테스트로 모델 검증\r\n                test_result = self.pipeline(\"김철수는 서울에 살고 있습니다.\")\r\n                \r\n                self.loaded = True\r\n                self.model_name = model_name\r\n                print(f\"✅ NER 모델 로드 성공: {model_name}\")\r\n                print(f\"   📱 디바이스: {self.device}\")\r\n                print(f\"   🧪 테스트 결과: {len(test_result)}개 엔티티 탐지\")\r\n                return True\r\n                \r\n            except Exception as e:\r\n                print(f\"❌ {model_name} 로드 실패: {e}\")\r\n                continue\r\n        \r\n        print(\"❌ 모든 NER 모델 로드 실패\")\r\n        print(\"💡 해결 방법:\")\r\n        print(\"   1. 인터넷 연결 확인\")\r\n        print(\"   2. pip install transformers torch\")\r\n        print(\"   3. 모델 다운로드를 위한 충분한 저장 공간 확보\")\r\n        self.loaded = False\r\n        return False\r\n    \r\n    def is_loaded(self) -> bool:\r\n        \"\"\"모델 로드 상태 확인\"\"\"\r\n        return self.loaded\r\n    \r\n    def extract_entities(self, text: str) -> List[Dict[str, Any]]:\r\n        \"\"\"텍스트에서 개체명 추출 (개선된 버전)\"\"\"\r\n        if not self.loaded or not self.pipeline:\r\n            return []\r\n        \r\n        try:\r\n            # NER 파이프라인 실행\r\n            ner_results = self.pipeline(text)\r\n            \r\n            entities = []\r\n            for entity in ner_results:\r\n                entity_type = entity['entity_group']\r\n                entity_text = entity['word']\r\n                confidence = entity['score']\r\n                start = entity['start']\r\n                end = entity['end']\r\n                \r\n                # 신뢰도 임계값 조정 (모델에 따라 다르게)\r\n                threshold = 0.8 if 'roberta-large' in self.model_name else 0.7\r\n                \r\n                if confidence > threshold:\r\n                    pii_type = self._map_ner_label_to_pii_type(entity_type)\r\n                    if pii_type:\r\n                        entities.append({\r\n                            \"type\": pii_type,\r\n                            \"value\": entity_text.strip(),\r\n                            \"start\": start,\r\n                            \"end\": end,\r\n                            \"confidence\": confidence,\r\n                            \"source\": f\"NER-{self.model_name.split('/')[-1]}\"\r\n                        })\r\n            \r\n            print(f\"🤖 NER ({self.model_name.split('/')[-1]}) 탐지: {len(entities)}개\")\r\n            return entities\r\n            \r\n        except Exception as e:\r\n            print(f\"❌ NER 개체명 추출 실패: {e}\")\r\n            return []\r\n    \r\n    def _map_ner_label_to_pii_type(self, label: str) -> Optional[str]:\r\n        \"\"\"NER 라벨을 PII 타입으로 매핑 (확장된 버전)\"\"\"\r\n        mapping = {\r\n            # 표준 라벨\r\n            'PER': '이름',\r\n            'PERSON': '이름',\r\n            'LOC': '주소',\r\n            'LOCATION': '주소',\r\n            'ORG': '회사',\r\n            'ORGANIZATION': '회사',\r\n            'MISC': '기타',\r\n            \r\n            # KLUE 라벨\r\n            'PS': '이름',      # Person\r\n            'LC': '주소',      # Location  \r\n            'OG': '회사',      # Organization\r\n            'DT': '기타',      # Date\r\n            'TI': '기타',      # Time\r\n            'QT': '기타',      # Quantity\r\n            \r\n            # 추가 매핑\r\n            'GPE': '주소',     # Geopolitical entity\r\n            'FAC': '주소',     # Facility\r\n        }\r\n        return mapping.get(label.upper())\r\n\r\n# 전역 모델 인스턴스\r\n_ner_model_instance = None\r\n\r\ndef get_ner_model() -> ImprovedNERModel:\r\n    \"\"\"NER 모델 싱글톤 인스턴스 반환\"\"\"\r\n    global _ner_model_instance\r\n    \r\n    if _ner_model_instance is None:\r\n        _ner_model_instance = ImprovedNERModel()\r\n    \r\n    return _ner_model_instance\r\n\r\ndef load_ner_model() -> bool:\r\n    \"\"\"NER 모델 로드 (백그라운드 실행 가능)\"\"\"\r\n    model = get_ner_model()\r\n    return model.load_model()\r\n\r\ndef extract_entities_with_ner(text: str) -> List[Dict[str, Any]]:\r\n    \"\"\"NER 모델을 사용한 개체명 추출\"\"\"\r\n    model = get_ner_model()\r\n    \r\n    if not model.is_loaded():\r\n        print(\"⚠️ NER 모델이 로드되지 않았습니다.\")\r\n        return []\r\n    \r\n    return model.extract_entities(text)\r\n\r\ndef is_ner_available() -> bool:\r\n    \"\"\"NER 기능 사용 가능 여부 확인\"\"\"\r\n    return NER_AVAILABLE\r\n\r\ndef is_ner_loaded() -> bool:\r\n    \"\"\"NER 모델 로드 상태 확인\"\"\"\r\n    model = get_ner_model()\r\n    return model.is_loaded()\r\n\r\ndef get_model_info() -> Dict[str, Any]:\r\n    \"\"\"현재 로드된 모델 정보 반환\"\"\"\r\n    model = get_ner_model()\r\n    return {\r\n        \"loaded\": model.is_loaded(),\r\n        \"model_name\": model.model_name if model.is_loaded() else None,\r\n        \"device\": model.device,\r\n        \"available_models\": NER_MODELS\r\n    }\r\n\r\n# 호환성을 위한 기존 함수들\r\ndef call_qwen_detect_pii(original_prompt: str, model=None, tokenizer=None, device=None) -> Dict[str, Any]:\r\n    \"\"\"기존 호환을 위한 함수 (개선된 NER로 변경)\"\"\"\r\n    print(\"⚠️ call_qwen_detect_pii는 deprecated입니다. extract_entities_with_ner를 사용하세요.\")\r\n    \r\n    entities = extract_entities_with_ner(original_prompt)\r\n    \r\n    return {\r\n        \"items\": entities,\r\n        \"contains_pii\": len(entities) > 0\r\n    }\r\n\r\ndef pick_device_and_dtype():\r\n    \"\"\"디바이스 및 데이터 타입 선택 (호환성)\"\"\"\r\n    model = get_ner_model()\r\n    device = model.device\r\n    \r\n    if device == 0:  # GPU\r\n        return \"cuda\", torch.bfloat16\r\n    elif device == \"mps\":  # Apple Silicon\r\n        return \"mps\", torch.float16\r\n    else:  # CPU\r\n        return \"cpu\", torch.float32\r\n\r\ndef load_model():\r\n    \"\"\"모델 로드 (호환성)\"\"\"\r\n    return load_ner_model()\r\n\r\n# 모듈 초기화 시 정보 출력\r\nif __name__ == \"__main__\":\r\n    print(\"🎭 개선된 NER 모델 모듈\")\r\n    print(f\"📱 Transformers 사용 가능: {NER_AVAILABLE}\")\r\n    print(f\"🤖 사용 가능한 모델들:\")\r\n    for i, model in enumerate(NER_MODELS, 1):\r\n        print(f\"   {i}. {model}\")\r\n    \r\n    if NER_AVAILABLE:\r\n        model = get_ner_model()\r\n        success = model.load_model()\r\n        if success:\r\n            # 테스트\r\n            test_text = \"안녕하세요, 저는 김테스트이고 서울 강남구에 살고 있습니다.\"\r\n            entities = model.extract_entities(test_text)\r\n            print(f\"🧪 테스트 결과: {len(entities)}개 개체 탐지\")\r\n            for entity in entities:\r\n                print(f\"   {entity['type']}: {entity['value']} (신뢰도: {entity['confidence']:.2f})\")\r\n        else:\r\n            print(\"❌ 모든 모델 로드 실패\")\n\n\n이게 모델 로드할 코드고\n\n100~300ms 정도 속도면 좋겠다\n\n뭐든 무료면 가능\n성능 속도 둘 다 필요해 어느 하나도 포기 못해\n배포 형태는 상관 없어 쓸 수만 있다면"
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "환경이",
            "start": 6,
            "end": 9,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "강테스트"
          },
          {
            "type": "이름",
            "value": "김테스트",
            "start": 7969,
            "end": 7973,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "안샘플"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "환경이": "강테스트",
        "김테스트": "안샘플"
      },
      "reverse_map": {
        "강테스트": "환경이",
        "안샘플": "김테스트"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:43:51",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758397431477",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "김샘플"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "65"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "test1097@gmail.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "김샘플",
        "25": "65",
        "contact@example.com": "test1097@gmail.com"
      },
      "reverse_map": {
        "김샘플": "이영희",
        "65": "25",
        "test1097@gmail.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:44:03",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758397443765",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "장가명"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0016-0022"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "고객": "장가명",
        "010-9876-5432": "010-0016-0022"
      },
      "reverse_map": {
        "장가명": "고객",
        "010-0016-0022": "010-9876-5432"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:44:13",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758397453927",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동이",
            "start": 13,
            "end": 17,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "송무명"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0013-0007"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "홍길동이": "송무명",
        "010-1234-5678": "010-0013-0007"
      },
      "reverse_map": {
        "송무명": "홍길동이",
        "010-0013-0007": "010-1234-5678"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:53:32",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398012030",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "이차명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "20"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "office1061@gmail.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "이차명",
        "25": "20",
        "contact@example.com": "office1061@gmail.com"
      },
      "reverse_map": {
        "이차명": "이영희",
        "20": "25",
        "office1061@gmail.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:53:46",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398026016",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "임차명"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0016-0092"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "고객": "임차명",
        "010-9876-5432": "010-0016-0092"
      },
      "reverse_map": {
        "임차명": "고객",
        "010-0016-0092": "010-9876-5432"
      },
      "performance": {
        "items_detected": 2
      }
    },
    {
      "time": "2025-09-21 04:54:46",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398086664",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "서무명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "34"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "office1063@naver.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "서무명",
        "25": "34",
        "contact@example.com": "office1063@naver.com"
      },
      "reverse_map": {
        "서무명": "이영희",
        "34": "25",
        "office1063@naver.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 04:59:57",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398397451",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "임가명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "24"
          },
          {
            "type": "주소",
            "value": "대구",
            "start": 10,
            "end": 12,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "서울시 송파구 가작로"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "work1041@gmail.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "이영희": "임가명",
        "25": "24",
        "대구": "서울시 송파구 가작로",
        "contact@example.com": "work1041@gmail.com"
      },
      "reverse_map": {
        "임가명": "이영희",
        "24": "25",
        "서울시 송파구 가작로": "대구",
        "work1041@gmail.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:00:19",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398419794",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동이",
            "start": 13,
            "end": 17,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "김무명"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0011-0043"
          },
          {
            "type": "주소",
            "value": "서울",
            "start": 42,
            "end": 44,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "서울시 송파구 강중길"
          },
          {
            "type": "주소",
            "value": "강남구",
            "start": 45,
            "end": 48,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "서울시 강남구 간현로"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "홍길동이": "김무명",
        "010-1234-5678": "010-0011-0043",
        "서울": "서울시 송파구 강중길",
        "강남구": "서울시 강남구 간현로"
      },
      "reverse_map": {
        "김무명": "홍길동이",
        "010-0011-0043": "010-1234-5678",
        "서울시 송파구 강중길": "서울",
        "서울시 강남구 간현로": "강남구"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:00:36",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398436332",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동이",
            "start": 13,
            "end": 17,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "권테스트"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0013-0019"
          },
          {
            "type": "주소",
            "value": "서울",
            "start": 42,
            "end": 44,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "서울시 강동구 가일길"
          },
          {
            "type": "주소",
            "value": "강남구",
            "start": 45,
            "end": 48,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "서울시 송파구 간성북로"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "홍길동이": "권테스트",
        "010-1234-5678": "010-0013-0019",
        "서울": "서울시 강동구 가일길",
        "강남구": "서울시 송파구 간성북로"
      },
      "reverse_map": {
        "권테스트": "홍길동이",
        "010-0013-0019": "010-1234-5678",
        "서울시 강동구 가일길": "서울",
        "서울시 송파구 간성북로": "강남구"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:00:41",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398441487",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "한가명"
          },
          {
            "type": "주소",
            "value": "부산",
            "start": 9,
            "end": 11,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "인천시 남동구"
          },
          {
            "type": "주소",
            "value": "해운대구",
            "start": 12,
            "end": 16,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "서울시 강남구 강변로"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0015-0056"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "고객": "한가명",
        "부산": "인천시 남동구",
        "해운대구": "서울시 강남구 강변로",
        "010-9876-5432": "010-0015-0056"
      },
      "reverse_map": {
        "한가명": "고객",
        "인천시 남동구": "부산",
        "서울시 강남구 강변로": "해운대구",
        "010-0015-0056": "010-9876-5432"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:04:06",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398646041",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "박별명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "33"
          },
          {
            "type": "주소",
            "value": "대구",
            "start": 10,
            "end": 12,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "부산시 부산진구"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "info1048@daum.net"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "대구": "부산시 부산진구",
        "이영희": "박별명",
        "25": "33",
        "contact@example.com": "info1048@daum.net"
      },
      "reverse_map": {
        "부산시 부산진구": "대구",
        "박별명": "이영희",
        "33": "25",
        "info1048@daum.net": "contact@example.com"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:04:30",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398670300",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "조테스트"
          },
          {
            "type": "주소",
            "value": "부산",
            "start": 9,
            "end": 11,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "서울시 마포구 강중길"
          },
          {
            "type": "주소",
            "value": "해운대구",
            "start": 12,
            "end": 16,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "서울시 마포구 강중길"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0016-0048"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "부산": "서울시 마포구 강중길",
        "해운대구": "서울시 마포구 강중길",
        "고객": "조테스트",
        "010-9876-5432": "010-0016-0048"
      },
      "reverse_map": {
        "서울시 마포구 강중길": "해운대구",
        "조테스트": "고객",
        "010-0016-0048": "010-9876-5432"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:09:10",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398950428",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "송별명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "38"
          },
          {
            "type": "주소",
            "value": "대구",
            "start": 10,
            "end": 12,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "강원"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "hello1082@naver.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "대구": "강원",
        "이영희": "송별명",
        "25": "38",
        "contact@example.com": "hello1082@naver.com"
      },
      "reverse_map": {
        "강원": "대구",
        "송별명": "이영희",
        "38": "25",
        "hello1082@naver.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:09:19",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398959907",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "박가명"
          },
          {
            "type": "주소",
            "value": "부산",
            "start": 9,
            "end": 11,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "충남"
          },
          {
            "type": "주소",
            "value": "해운대구",
            "start": 12,
            "end": 16,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "충남"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0012-0019"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "부산": "충남",
        "해운대구": "충남",
        "고객": "박가명",
        "010-9876-5432": "010-0012-0019"
      },
      "reverse_map": {
        "충남": "해운대구",
        "박가명": "고객",
        "010-0012-0019": "010-9876-5432"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:09:39",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758398979726",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동이",
            "start": 13,
            "end": 17,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "권차명"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0019-0020"
          },
          {
            "type": "주소",
            "value": "서울",
            "start": 42,
            "end": 44,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "인천"
          },
          {
            "type": "주소",
            "value": "강남구",
            "start": 45,
            "end": 48,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "인천"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "서울": "인천",
        "강남구": "인천",
        "홍길동이": "권차명",
        "010-1234-5678": "010-0019-0020"
      },
      "reverse_map": {
        "인천": "강남구",
        "권차명": "홍길동이",
        "010-0019-0020": "010-1234-5678"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:16:32",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758399392111",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "이영희",
            "start": 0,
            "end": 3,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "강가명"
          },
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "38"
          },
          {
            "type": "주소",
            "value": "대구",
            "start": 10,
            "end": 12,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "서울"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "work1075@daum.net"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "대구": "서울",
        "이영희": "강가명",
        "25": "38",
        "contact@example.com": "work1075@daum.net"
      },
      "reverse_map": {
        "서울": "대구",
        "강가명": "이영희",
        "38": "25",
        "work1075@daum.net": "contact@example.com"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:16:38",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758399398395",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "고객",
            "start": 4,
            "end": 6,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "최샘플"
          },
          {
            "type": "주소",
            "value": "부산",
            "start": 9,
            "end": 11,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "부산"
          },
          {
            "type": "주소",
            "value": "해운대구",
            "start": 12,
            "end": 16,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "부산"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0017-0096"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "부산": "부산",
        "해운대구": "부산",
        "고객": "최샘플",
        "010-9876-5432": "010-0017-0096"
      },
      "reverse_map": {
        "부산": "해운대구",
        "최샘플": "고객",
        "010-0017-0096": "010-9876-5432"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:18:28",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758399507953",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동",
            "start": 13,
            "end": 16,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "윤가명"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0017-0001"
          },
          {
            "type": "주소",
            "value": "서울",
            "start": 42,
            "end": 44,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "경남"
          },
          {
            "type": "주소",
            "value": "강남구",
            "start": 45,
            "end": 48,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "경남"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "서울": "경남",
        "강남구": "경남",
        "홍길동": "윤가명",
        "010-1234-5678": "010-0017-0001"
      },
      "reverse_map": {
        "경남": "강남구",
        "윤가명": "홍길동",
        "010-0017-0001": "010-1234-5678"
      },
      "performance": {
        "items_detected": 4
      }
    },
    {
      "time": "2025-09-21 05:21:23",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758399683740",
        "prompt": "이영희님 25세, 대구 중구 거주하시는 분이시죠? contact@example.com으로 메일 보내드렸습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "나이",
            "value": "25",
            "start": 5,
            "end": 8,
            "confidence": 0.9,
            "source": "Regex",
            "replacement": "39"
          },
          {
            "type": "주소",
            "value": "대구",
            "start": 10,
            "end": 12,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "울산"
          },
          {
            "type": "이메일",
            "value": "contact@example.com",
            "start": 28,
            "end": 47,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "hello1017@kakao.com"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "대구": "울산",
        "25": "39",
        "contact@example.com": "hello1017@kakao.com"
      },
      "reverse_map": {
        "울산": "대구",
        "39": "25",
        "hello1017@kakao.com": "contact@example.com"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 05:21:34",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758399694235",
        "prompt": "김철수 고객님, 부산 해운대구 예약이 확인되었습니다. 문의사항은 010-9876-5432로 연락 주세요."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "주소",
            "value": "부산",
            "start": 9,
            "end": 11,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "경기"
          },
          {
            "type": "주소",
            "value": "해운대구",
            "start": 12,
            "end": 16,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "경기"
          },
          {
            "type": "전화번호",
            "value": "010-9876-5432",
            "start": 36,
            "end": 49,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0014-0008"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "부산": "경기",
        "해운대구": "경기",
        "010-9876-5432": "010-0014-0008"
      },
      "reverse_map": {
        "경기": "해운대구",
        "010-0014-0008": "010-9876-5432"
      },
      "performance": {
        "items_detected": 3
      }
    },
    {
      "time": "2025-09-21 05:21:41",
      "remote_addr": "127.0.0.1",
      "path": "/pseudonymize",
      "input": {
        "id": "debug_test_1758399701635",
        "prompt": "안녕하세요, 제 이름은 홍길동이고 연락처는 010-1234-5678입니다. 서울 강남구에 살고 있습니다."
      },
      "detection": {
        "contains_pii": true,
        "items": [
          {
            "type": "이름",
            "value": "홍길동",
            "start": 13,
            "end": 16,
            "confidence": 0.75,
            "source": "Pattern",
            "replacement": "오샘플"
          },
          {
            "type": "전화번호",
            "value": "010-1234-5678",
            "start": 24,
            "end": 37,
            "confidence": 1.0,
            "source": "Regex",
            "replacement": "010-0011-0023"
          },
          {
            "type": "주소",
            "value": "서울",
            "start": 42,
            "end": 44,
            "confidence": 0.85,
            "source": "Regex-Pattern3",
            "replacement": "광주"
          },
          {
            "type": "주소",
            "value": "강남구",
            "start": 45,
            "end": 48,
            "confidence": 0.85,
            "source": "Regex-Pattern4",
            "replacement": "광주"
          }
        ],
        "model_used": "Enhanced NER + Improved Regex + NamePool + FullNamePool"
      },
      "substitution_map": {
        "서울": "광주",
        "강남구": "광주",
        "홍길동": "오샘플",
        "010-1234-5678": "010-0011-0023"
      },
      "reverse_map": {
        "광주": "강남구",
        "오샘플": "홍길동",
        "010-0011-0023": "010-1234-5678"
      },
      "performance": {
        "items_detected": 4
      }
    }
  ]
}